{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/project-semantic/frontend/src/components/PdfsForm/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IconButton, Typography, TextField, Button, Dialog, DialogContent, DialogTitle, DialogActions } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createPdf } from \"../../actions/Pdfs.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    selectedFile: \"\"\n  });\n  const [show, setShow] = useState(false);\n\n  const showForm = () => {\n    setShow(true);\n  };\n\n  const hideForm = () => {\n    setShow(false);\n  };\n\n  function handleSubmit() {\n    const form = {\n      userId: JSON.parse(localStorage.getItem(\"profile\")).result._id,\n      name: formData.name\n    };\n    dispatch(createPdf(form));\n    hideForm();\n  }\n\n  function handleChange(e) {\n    console.log(e);\n    setFormData({ ...formData,\n      [e.target.id]: e.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: showForm,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: show,\n      onClose: hideForm,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: formData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create Pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: hideForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"2t1RIuQn/j61tXwFJhDAX3j4+qE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/components/PdfsForm/Form.jsx"],"names":["React","IconButton","Typography","TextField","Button","Dialog","DialogContent","DialogTitle","DialogActions","useState","useDispatch","createPdf","AddIcon","Form","dispatch","formData","setFormData","name","selectedFile","show","setShow","showForm","hideForm","handleSubmit","form","userId","JSON","parse","localStorage","getItem","result","_id","handleChange","e","console","log","target","id","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { IconButton, Typography, TextField, Button, Dialog, DialogContent, DialogTitle, DialogActions} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createPdf } from \"../../actions/Pdfs.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nconst Form = () => {\n    const dispatch = useDispatch();\n    const [formData, setFormData] = useState({\n        name: \"\",\n        selectedFile: \"\"\n    });\n\n    const [show, setShow] = useState(false);\n    const showForm = () => {setShow(true);};\n    const hideForm = () => {setShow(false);};\n\n    function handleSubmit(){\n        const form = {userId: JSON.parse(localStorage.getItem(\"profile\")).result._id, name: formData.name};\n        dispatch(createPdf(form));\n        hideForm();\n    }\n\n    function handleChange(e){\n        console.log(e)\n        setFormData({\n            ...formData, [e.target.id]: e.target.value\n        });\n    }\n\n    return (\n        <>\n            <IconButton onClick={showForm} variant=\"outlined\">\n                <AddIcon/>\n            </IconButton>\n            <Dialog open={show} onClose={hideForm}>\n                <Typography>{formData.name}</Typography>\n                <DialogTitle>Create Pdf</DialogTitle>\n                <DialogContent>\n                                    <Button\n                                        variant=\"contained\"\n                                        component=\"label\"\n                                    >\n                        Upload File\n                        <input\n                            type=\"file\"\n                            hidden\n                            onChange={handleChange}\n                        />\n                    </Button>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={hideForm}>Cancel</Button>\n                    <Button onClick={handleSubmit}>Create</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}