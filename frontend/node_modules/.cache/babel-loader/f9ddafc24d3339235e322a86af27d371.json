{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\ninstance.interceptors.request.use(req => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\n  }\n\n  return req;\n});\nexport const getPdfs = () => instance.get(\"/pdfs\");\nexport const createPdf = newPdf => {\n  return instance.post(\"/pdfs/add\", newPdf);\n};\nexport const getPdfData = newPdf => {\n  return instance.post(\"/pdfs/add\", newPdf);\n};\nexport const updatePdf = pdf => instance.patch(\"/pdfs/update\", pdf);\nexport const deletePdf = id => instance.delete(`/pdfs/delete/${id}`);","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/api/Pdf.js"],"names":["axios","instance","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","getPdfs","get","createPdf","newPdf","post","getPdfData","updatePdf","pdf","patch","deletePdf","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAjB;AAEAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,GAAD,IAAS;AACvC,MAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAmC;AAC/BF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;AACH;;AACD,SAAOP,GAAP;AACH,CALD;AAOA,OAAO,MAAMQ,OAAO,GAAG,MAAMd,QAAQ,CAACe,GAAT,CAAa,OAAb,CAAtB;AACP,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACjC,SAAOjB,QAAQ,CAACkB,IAAT,CAAc,WAAd,EAA2BD,MAA3B,CAAP;AACH,CAFM;AAGP,OAAO,MAAME,UAAU,GAAIF,MAAD,IAAY;AAClC,SAAOjB,QAAQ,CAACkB,IAAT,CAAc,WAAd,EAA2BD,MAA3B,CAAP;AACH,CAFM;AAGP,OAAO,MAAMG,SAAS,GAAIC,GAAD,IAASrB,QAAQ,CAACsB,KAAT,CAAe,cAAf,EAA+BD,GAA/B,CAA3B;AACP,OAAO,MAAME,SAAS,GAAIC,EAAD,IAAQxB,QAAQ,CAACyB,MAAT,CAAiB,gBAAeD,EAAG,EAAnC,CAA1B","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({ baseURL: \"http://localhost:5000\" });\n\ninstance.interceptors.request.use((req) => {\n    if(localStorage.getItem(\"profile\")){\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\n    }\n    return req;\n});\n\nexport const getPdfs = () => instance.get(\"/pdfs\");\nexport const createPdf = (newPdf) => {\n    return instance.post(\"/pdfs/add\", newPdf);\n};\nexport const getPdfData = (newPdf) => {\n    return instance.post(\"/pdfs/add\", newPdf);\n};\nexport const updatePdf = (pdf) => instance.patch(\"/pdfs/update\", pdf);\nexport const deletePdf = (id) => instance.delete(`/pdfs/delete/${id}`);   \n"]},"metadata":{},"sourceType":"module"}