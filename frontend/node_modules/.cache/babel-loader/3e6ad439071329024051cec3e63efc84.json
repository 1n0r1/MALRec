{"ast":null,"code":"import { OPEN_PDF, FETCH_PDF_DATA, FETCH_ALL_PDF, CREATE_PDF, UPDATE_PDF, DELETE_PDF } from \"../constants/actions.js\";\n\nconst PdfReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    pdfs: [],\n    openPdf: null,\n    pdfData: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL_PDF:\n      return { ...state,\n        pdfs: action.payload\n      };\n\n    case FETCH_PDF_DATA:\n      return { ...state,\n        pdfData: action.payload\n      };\n\n    case OPEN_PDF:\n      return { ...state,\n        openPdf: action.payload\n      };\n\n    case CREATE_PDF:\n      return { ...state,\n        pdfs: [...state.pdfs, action.payload]\n      };\n\n    case UPDATE_PDF:\n      return { ...state,\n        pdfs: state.pdfs.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE_PDF:\n      return { ...state,\n        pdfs: state.pdfs.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = PdfReducer;\nexport default PdfReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PdfReducer\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/reducers/pdfs.js"],"names":["OPEN_PDF","FETCH_PDF_DATA","FETCH_ALL_PDF","CREATE_PDF","UPDATE_PDF","DELETE_PDF","PdfReducer","state","pdfs","openPdf","pdfData","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,cAAlB,EAAkCC,aAAlC,EAAiDC,UAAjD,EAA6DC,UAA7D,EAAyEC,UAAzE,QAA0F,yBAA1F;;AAEA,MAAMC,UAAU,GAAG,YAA6D;AAAA,MAA5DC,KAA4D,uEAApD;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE,IAApB;AAA0BC,IAAAA,OAAO,EAAE;AAAnC,GAAoD;AAAA,MAAXC,MAAW;;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,aAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWC,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAxB,OAAP;;AACJ,SAAKZ,cAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWG,QAAAA,OAAO,EAAEC,MAAM,CAACE;AAA3B,OAAP;;AACJ,SAAKb,QAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWE,QAAAA,OAAO,EAAEE,MAAM,CAACE;AAA3B,OAAP;;AACJ,SAAKV,UAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWC,QAAAA,IAAI,EAAE,CAAC,GAAGD,KAAK,CAACC,IAAV,EAAgBG,MAAM,CAACE,OAAvB;AAAjB,OAAP;;AACJ,SAAKT,UAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAWC,QAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWM,GAAX,CAAgBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAA7E;AAAjB,OAAP;;AACJ,SAAKV,UAAL;AACI,aAAO,EAAC,GAAGE,KAAJ;AAAWC,QAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWS,MAAX,CAAmBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAhD;AAAjB,OAAP;;AACJ;AACI,aAAON,KAAP;AAdJ;AAgBH,CAjBD;;KAAMD,U;AAmBN,eAAeA,UAAf","sourcesContent":["import {OPEN_PDF, FETCH_PDF_DATA, FETCH_ALL_PDF, CREATE_PDF, UPDATE_PDF, DELETE_PDF} from \"../constants/actions.js\";\n\nconst PdfReducer = (state = {pdfs: [], openPdf: null, pdfData: null},action) => {\n    switch (action.type) {\n    case FETCH_ALL_PDF:\n        return {...state, pdfs: action.payload};\n    case FETCH_PDF_DATA:\n        return {...state, pdfData: action.payload};\n    case OPEN_PDF:\n        return {...state, openPdf: action.payload};\n    case CREATE_PDF:\n        return {...state, pdfs: [...state.pdfs, action.payload]};\n    case UPDATE_PDF:\n        return {...state, pdfs: state.pdfs.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case DELETE_PDF:\n        return {...state, pdfs: state.pdfs.filter((post) => post._id !== action.payload)};\n    default:\n        return state;\n    }\n};\n\nexport default PdfReducer;\n"]},"metadata":{},"sourceType":"module"}