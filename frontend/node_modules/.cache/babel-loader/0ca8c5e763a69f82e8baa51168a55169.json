{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Menu, Grid, CircularProgress, Box, Button } from '@mui/material';\nimport Result from './Result/Result.jsx';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const results = useSelector(state => state.search.results);\n  return results.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: results.map(result => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <Result key={result} result/>\n    )\n  }, void 0, false);\n};\n\n_s(Results, \"l6tnAVMZGlCrDrAHcx3or0LRk9Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/components/Results/Results.jsx"],"names":["React","useEffect","useSelector","useDispatch","Menu","Grid","CircularProgress","Box","Button","Result","Results","dispatch","results","state","search","length","map","result"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,gBAArB,EAAuCC,GAAvC,EAA4CC,MAA5C,QAA0D,eAA1D;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,OAAvB,CAA3B;AACA,SACIA,OAAO,CAACG,MAAR,KAAmB,CAAnB,gBAAwB,qCAAxB,gBACI;AAAA,cAEQH,OAAO,CAACI,GAAR,CAAYC,MAAM,iBACd,qCADc,CAGd;AAHJ;AAFR,mBAFR;AAaH,CAhBD;;GAAMP,O;UACeP,W,EACDD,W;;;KAFdQ,O;AAiBN,eAAeA,OAAf","sourcesContent":["import React, {useEffect}  from 'react';\nimport {useSelector, useDispatch} from 'react-redux'\nimport { Menu, Grid, CircularProgress, Box, Button } from '@mui/material';\nimport Result from './Result/Result.jsx';\n\nconst Results = () => {\n    const dispatch = useDispatch();\n    const results = useSelector(state => state.search.results)\n    return(\n        results.length === 0 ? (<></>) : (\n            <>\n                {\n                    results.map(result => (\n                        <>\n                        </>\n                        // <Result key={result} result/>\n                    ))\n                }\n            </>\n        )\n    )\n};\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}