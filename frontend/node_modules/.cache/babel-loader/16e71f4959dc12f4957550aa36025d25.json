{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/project-semantic/frontend/src/components/PdfsForm/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IconButton, Typography, TextField, Button, Dialog, DialogContent, DialogTitle, DialogActions } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createPdf } from \"../../actions/Pdfs.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState({});\n  const [show, setShow] = useState(false);\n\n  const showForm = () => {\n    setShow(true);\n  };\n\n  const hideForm = () => {\n    setShow(false);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault(); // const data = new FormData();\n    // data.append('file', this.state.selectedFile);\n\n    dispatch(createPdf(data));\n    hideForm();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: showForm,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: show,\n      onClose: hideForm,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create Pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: e => {\n              setSelectedFile(e.target.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: hideForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"3Efmz39wI+wRqmL3gmhEubqXUQI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/components/PdfsForm/Form.jsx"],"names":["React","IconButton","Typography","TextField","Button","Dialog","DialogContent","DialogTitle","DialogActions","useState","useDispatch","createPdf","AddIcon","Form","dispatch","selectedFile","setSelectedFile","show","setShow","showForm","hideForm","handleSubmit","e","preventDefault","data","formData","name","target","files"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,aAA5D,EAA2EC,WAA3E,EAAwFC,aAAxF,QAA4G,eAA5G;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMU,QAAQ,GAAG,MAAM;AAACD,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,GAAvC;;AACA,QAAME,QAAQ,GAAG,MAAM;AAACF,IAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB,GAAxC;;AAGA,WAASG,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CAEpB;AACA;;AACAT,IAAAA,QAAQ,CAACH,SAAS,CAACa,IAAD,CAAV,CAAR;AACAJ,IAAAA,QAAQ;AACX;;AAED,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAED,QAArB;AAA+B,MAAA,OAAO,EAAC,UAAvC;AAAA,6BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,IAAd;AAAoB,MAAA,OAAO,EAAEG,QAA7B;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,gCACI,QAAC,UAAD;AAAA,oBAAaK,QAAQ,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,WADZ;AAEI,UAAA,SAAS,EAAC,OAFd;AAAA,iDAKI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,MAAM,MAFV;AAGI,YAAA,QAAQ,EAAGJ,CAAD,IAAK;AAACN,cAAAA,eAAe,CAACM,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AAAmC;AAHvD;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAgBI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAER,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AA4BH,CA7CD;;GAAMR,I;UACeH,W;;;KADfG,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { IconButton, Typography, TextField, Button, Dialog, DialogContent, DialogTitle, DialogActions} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createPdf } from \"../../actions/Pdfs.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nconst Form = () => {\n    const dispatch = useDispatch();\n    const [selectedFile, setSelectedFile] = useState({});\n\n    const [show, setShow] = useState(false);\n    const showForm = () => {setShow(true);};\n    const hideForm = () => {setShow(false);};\n\n\n    function handleSubmit(e){\n        e.preventDefault();\n        // const data = new FormData();\n        // data.append('file', this.state.selectedFile);\n        dispatch(createPdf(data));\n        hideForm();\n    }\n\n    return (\n        <>\n            <IconButton onClick={showForm} variant=\"outlined\">\n                <AddIcon/>\n            </IconButton>\n            <Dialog open={show} onClose={hideForm}>\n                <DialogTitle>Create Pdf</DialogTitle>\n                <DialogContent>\n                    <Typography>{formData.name}</Typography>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >\n                        Upload File\n                        <input\n                            type=\"file\"\n                            hidden\n                            onChange={(e)=>{setSelectedFile(e.target.files[0])}}\n                        />\n                    </Button>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={hideForm}>Cancel</Button>\n                    <Button onClick={handleSubmit}>Create</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}