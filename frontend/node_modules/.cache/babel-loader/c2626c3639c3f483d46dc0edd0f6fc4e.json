{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { getPdfs } from '../../actions/Pdfs.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport { Menu, Grid, CircularProgress, Box, Button } from '@mui/material';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const results = useSelector(state => state.search.results).split(\"\\n\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Result, \"0gwGdShUjY5QW1YBj+VDmmWM8/0=\", false, function () {\n  return [useDispatch, useLocation, useSelector];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/components/Results/Results.jsx"],"names":["React","useEffect","getPdfs","useSelector","useDispatch","useLocation","Menu","Grid","CircularProgress","Box","Button","Result","dispatch","location","results","state","search","split"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,WAAR,QAA0B,cAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,gBAArB,EAAuCC,GAAvC,EAA4CC,MAA5C,QAA0D,eAA1D;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,OAAvB,CAAX,CAA2CG,KAA3C,CAAiD,IAAjD,CAAhB;AACA,sBACI,qCADJ;AAIH,CARD;;GAAMN,M;UACeP,W,EACAC,W,EACDF,W;;;KAHdQ,M;AASN,eAAeA,MAAf","sourcesContent":["import React, {useEffect}  from 'react';\nimport {getPdfs} from '../../actions/Pdfs.js'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useLocation} from 'react-router'\nimport { Menu, Grid, CircularProgress, Box, Button } from '@mui/material';\n\nconst Result = () => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const results = useSelector(state => state.search.results).split(\"\\n\")\n    return (\n        <>\n        </>\n    )\n};\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}