{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/workspace/frontend/src/components/Notesform/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { createNote } from \"../../actions/Notes.js\";\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(bin) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [noteData, setNoteData] = useState({\n    note: \"\",\n    binId,\n    due: \"\",\n    file: \"\"\n  });\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleSubmit() {\n    dispatch(createNote(noteData));\n    handleClose();\n  }\n\n  function handleDueDateChange(newDate) {\n    setNoteData({ ...noteData,\n      due: newDate\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: handleClickOpen,\n        children: \"Create Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"note\",\n            variant: \"outlined\",\n            label: \"Note\",\n            fullWidth: true,\n            value: noteData.note,\n            onChange: e => setNoteData({ ...noteData,\n              note: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"outlined\",\n            component: \"label\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              hidden: true,\n              type: \"file\",\n              className: \"custom-file-input\",\n              name: \"myImage\",\n              onChange: _ref => {\n                let {\n                  file\n                } = _ref;\n                return setNoteData({ ...noteData,\n                  selectedFile: file\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customDatePickerWidth\",\n            width: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"Due Date\",\n              value: noteData.due,\n              fullWidth: true,\n              onChange: newValue => {\n                handleDueDateChange(newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 179\n              }, this),\n              sx: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"W0D3Kq5k9r1FLdoGd3kQWLiqaQM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/hain/code/workspace/frontend/src/components/Notesform/Form.jsx"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useDispatch","createNote","DesktopDatePicker","LocalizationProvider","AdapterDateFns","Form","bin","dispatch","noteData","setNoteData","note","binId","due","file","open","setOpen","handleClickOpen","handleClose","handleSubmit","handleDueDateChange","newDate","e","target","value","selectedFile","newValue","params","width"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle} from \"@mui/material\";\nimport {useDispatch} from \"react-redux\";\nimport {createNote} from \"../../actions/Notes.js\";\nimport {DesktopDatePicker} from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nexport default function Form(bin) {\n    const dispatch = useDispatch();\n    const [noteData, setNoteData] = useState({ note: \"\", binId, due: \"\", file: \"\" });\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => { \n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleSubmit (){\n        dispatch(createNote(noteData));\n        handleClose();\n    }\n\n    function handleDueDateChange(newDate){\n        setNoteData({...noteData, due: newDate});\n    }\n    return (\n\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <div>\n                <Button  color=\"secondary\" variant=\"contained\" onClick={handleClickOpen}>\n                    Create Note\n                </Button>\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle>Create Note</DialogTitle>\n                    <DialogContent>\n                        <TextField name=\"note\" variant=\"outlined\" label=\"Note\" fullWidth value={noteData.note} onChange={(e) => setNoteData({ ...noteData, note: e.target.value })} />\n                        <Button fullWidth variant=\"outlined\" component=\"label\" >\n                            Upload File\n                            <input hidden type=\"file\" className=\"custom-file-input\" name=\"myImage\" onChange= {({file}) => setNoteData({...noteData, selectedFile: file})} />\n                        </Button>\n                        <div className=\"customDatePickerWidth\" width=\"100%\">\n                            <DesktopDatePicker label=\"Due Date\" value={noteData.due} fullWidth onChange={(newValue) => {handleDueDateChange(newValue);}} renderInput={(params) => <TextField {...params} />} sx={{width: \"100%\"}} />\n                        </div>\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>Cancel</Button>\n                        <Button onClick={handleSubmit}>Submit</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        </LocalizationProvider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}