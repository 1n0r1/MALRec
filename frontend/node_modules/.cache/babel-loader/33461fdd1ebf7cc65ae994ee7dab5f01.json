{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/project-semantic/frontend/src/components/PdfsForm/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IconButton, Typography, TextField, Button, Dialog, DialogContent, DialogTitle, DialogActions } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createPdf } from \"../../actions/Pdfs.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport axios from 'axios';\nimport FileBase from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState({});\n  const [show, setShow] = useState(false);\n  const [uploading, setUploading] = useState(false);\n\n  const showForm = () => {\n    setShow(true);\n  };\n\n  const hideForm = () => {\n    setShow(false);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setUploading(true);\n    dispatch(createPdf(selectedFile)).then(() => {\n      hideForm();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: showForm,\n      variant: \"contained\",\n      children: \"Create PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: show,\n      onClose: hideForm,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create Pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          hidden: true,\n          type: \"file\",\n          multiple: false,\n          onDone: e => setSelectedFile(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), uploading ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Uploading.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: hideForm,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"iICDlSnjWRSXviTCxTnYILd7poE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/components/PdfsForm/Form.jsx"],"names":["React","IconButton","Typography","TextField","Button","Dialog","DialogContent","DialogTitle","DialogActions","useState","useDispatch","createPdf","AddIcon","axios","FileBase","Form","dispatch","selectedFile","setSelectedFile","show","setShow","uploading","setUploading","showForm","hideForm","handleSubmit","e","preventDefault","then"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,aAA5D,EAA2EC,WAA3E,EAAwFC,aAAxF,QAA4G,eAA5G;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMc,QAAQ,GAAG,MAAM;AAACH,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,GAAvC;;AACA,QAAMI,QAAQ,GAAG,MAAM;AAACJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB,GAAxC;;AAGA,WAASK,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,QAAQ,CAACL,SAAS,CAACM,YAAD,CAAV,CAAR,CAAkCW,IAAlC,CAAuC,MAAI;AACvCJ,MAAAA,QAAQ;AACX,KAFD;AAGH;;AACD,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,QAAjB;AAA2B,MAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEJ,IAAd;AAAoB,MAAA,OAAO,EAAEK,QAA7B;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,QAAQ,EAAE,KAAvC;AAA8C,UAAA,MAAM,EAAGE,CAAD,IAAOR,eAAe,CAACQ,CAAD;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMQL,SAAS,gBACL,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL,qCATZ,eAYI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAwBH,CAzCD;;GAAMV,I;UACeL,W;;;KADfK,I;AA0CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { IconButton, Typography, TextField, Button, Dialog, DialogContent, DialogTitle, DialogActions} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createPdf } from \"../../actions/Pdfs.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport axios from 'axios';\nimport FileBase from 'react-file-base64';\n\nconst Form = () => {\n    const dispatch = useDispatch();\n    const [selectedFile, setSelectedFile] = useState({});\n\n    const [show, setShow] = useState(false);\n    const [uploading, setUploading] = useState(false);\n    const showForm = () => {setShow(true);};\n    const hideForm = () => {setShow(false);};\n\n\n    function handleSubmit(e){\n        e.preventDefault();\n        setUploading(true)\n        dispatch(createPdf(selectedFile)).then(()=>{\n            hideForm();\n        })\n    }\n    return (\n        <>\n            <Button onClick={showForm} variant=\"contained\">\n                Create PDF\n            </Button>\n            <Dialog open={show} onClose={hideForm}>\n                <DialogTitle>Create Pdf</DialogTitle>\n                <DialogContent>\n                    <FileBase hidden type=\"file\" multiple={false} onDone={(e) => setSelectedFile(e)} />\n                </DialogContent>\n                {\n                    uploading?(\n                        <Typography variant=\"h6\">Uploading.</Typography>\n                    ):(\n                        <></>\n                    )\n                }\n                <DialogActions>\n                    <Button onClick={hideForm}>Cancel</Button>\n                    <Button onClick={handleSubmit}>Create</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}