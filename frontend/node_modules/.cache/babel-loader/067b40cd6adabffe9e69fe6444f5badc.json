{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/workspace/frontend/src/components/Bins/Bins.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, Grid } from \"@mui/material\";\nimport { getBins } from \"../../actions/Bins.js\";\nimport Bin from \"./Bin.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Bins() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getBins());\n  }, [location, dispatch]);\n  const bins = useSelector(state => state.workspaces.bins);\n  const openWorkspace = useSelector(state => state.workspaces.openWorkspace);\n  return openWorkspace !== null ? /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    sx: {\n      justifyContent: \"space-evenly\"\n    },\n    children: openWorkspace.bins.map(binId => {\n      let b = bins.filter(bin => bin._id === binId)[0];\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Bin, {\n          bin: b\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, this)\n      }, b._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Bins, \"CKaH2VGILlHOKME8iHhCryzjZI0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Bins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bins\");","map":{"version":3,"sources":["/home/hain/code/workspace/frontend/src/components/Bins/Bins.jsx"],"names":["React","useEffect","useDispatch","useSelector","Box","Grid","getBins","Bin","Bins","dispatch","location","bins","state","workspaces","openWorkspace","justifyContent","map","binId","b","filter","bin","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;AACA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACnBQ,IAAAA,QAAQ,CAACH,OAAO,EAAR,CAAR;AACI,GAFQ,EAEP,CAACI,QAAD,EAAWD,QAAX,CAFO,CAAT;AAGA,QAAME,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,IAA3B,CAAxB;AACA,QAAMG,aAAa,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,aAA3B,CAAjC;AACA,SACIA,aAAa,KAAK,IAAlB,gBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAhC;AAAA,cAEQD,aAAa,CAACH,IAAd,CAAmBK,GAAnB,CAAuBC,KAAK,IAAI;AAC5B,UAAIC,CAAC,GAAGP,IAAI,CAACQ,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYJ,KAA/B,EAAsC,CAAtC,CAAR;AACA,0BACI,QAAC,IAAD;AAAkB,QAAA,IAAI,MAAtB;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ,SAAWA,CAAC,CAACG,GAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAPD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ,gBAcI,qCAfR;AAkBH;;GAzBuBb,I;UACHN,W,EAIJC,W,EACSA,W;;;KANFK,I","sourcesContent":["import React, {useEffect} from \"react\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {Box, Grid} from \"@mui/material\"\nimport {getBins} from \"../../actions/Bins.js\"\nimport Bin from \"./Bin.jsx\"\nexport default function Bins(){\n    const dispatch = useDispatch()\n    useEffect(() => {\n\tdispatch(getBins());\n    },[location, dispatch]);\n    const bins = useSelector(state => state.workspaces.bins)\n    const openWorkspace = useSelector(state => state.workspaces.openWorkspace)\n    return (\n        openWorkspace !== null?(\n            <Grid container spacing={3} sx={{justifyContent: \"space-evenly\"}}>\n                {\n                    openWorkspace.bins.map(binId => {\n                        let b = bins.filter(bin => bin._id === binId)[0]\n                        return (\n                            <Grid key={b._id} item xs={2}>\n                                <Bin bin={b}/>\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        ):(\n            <></>\n        )\n    )\n}\n"]},"metadata":{},"sourceType":"module"}