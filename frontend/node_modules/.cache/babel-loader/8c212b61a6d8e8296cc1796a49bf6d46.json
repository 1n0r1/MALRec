{"ast":null,"code":"import { FETCH_ALL_PDF, FETCH_PDF_DATA, OPEN_PDF, CREATE_PDF, DELETE_PDF } from \"../constants/actions.js\";\nimport * as api from \"../api/Pdf.js\";\nimport { triggerBase64Download } from 'common-base64-downloader-react';\nexport const getPdfs = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getPdfs();\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL_PDF,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPdfData = pdf => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getPdfData({\n      id: pdf._id\n    });\n    console.log(data.selectedFile);\n    triggerBase64Download(data.selectedFile, pdf.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPdf = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPdf(formData);\n    dispatch({\n      type: CREATE_PDF,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePdf = formData => async dispatch => {\n  try {\n    console.log(formData);\n    const {\n      data\n    } = await api.deletePdf(formData);\n    dispatch({\n      type: DELETE_PDF,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const openPdf = pdf => async dispatch => {\n  try {\n    dispatch({\n      type: OPEN_PDF,\n      payload: pdf\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/actions/Pdfs.js"],"names":["FETCH_ALL_PDF","FETCH_PDF_DATA","OPEN_PDF","CREATE_PDF","DELETE_PDF","api","triggerBase64Download","getPdfs","dispatch","data","console","log","type","payload","error","getPdfData","pdf","id","_id","selectedFile","name","createPdf","formData","deletePdf","openPdf"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,cAAxB,EAAwCC,QAAxC,EAAkDC,UAAlD,EAA8DC,UAA9D,QAAgF,yBAAhF;AACA,OAAO,KAAKC,GAAZ,MAAqB,eAArB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACE,OAAJ,EAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEZ,aAAR;AAAuBa,MAAAA,OAAO,EAAEJ;AAAhC,KAAD,CAAR;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIC,GAAD,IAAS,MAAOR,QAAP,IAAoB;AACnD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACU,UAAJ,CAAe;AAACE,MAAAA,EAAE,EAAED,GAAG,CAACE;AAAT,KAAf,CAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACU,YAAjB;AACAb,IAAAA,qBAAqB,CAACG,IAAI,CAACU,YAAN,EAAoBH,GAAG,CAACI,IAAxB,CAArB;AACH,GAJD,CAIE,OAAON,KAAP,EAAc;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMO,SAAS,GAAIC,QAAD,IAAc,MAAOd,QAAP,IAAoB;AACvD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACgB,SAAJ,CAAcC,QAAd,CAAvB;AACAd,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET,UAAR;AAAoBU,MAAAA,OAAO,EAAEJ;AAA7B,KAAD,CAAR;AACH,GAHD,CAGE,OAAOK,KAAP,EAAc;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CAPM;AASP,OAAO,MAAMS,SAAS,GAAID,QAAD,IAAc,MAAOd,QAAP,IAAoB;AACvD,MAAI;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACkB,SAAJ,CAAcD,QAAd,CAAvB;AACAd,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAER,UAAR;AAAoBS,MAAAA,OAAO,EAAEJ;AAA7B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMU,OAAO,GAAIR,GAAD,IAAS,MAAOR,QAAP,IAAoB;AAChD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEV,QAAR;AAAkBW,MAAAA,OAAO,EAAEG;AAA3B,KAAD,CAAR;AACH,GAFD,CAEC,OAAOF,KAAP,EAAa;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,CANM","sourcesContent":["import { FETCH_ALL_PDF, FETCH_PDF_DATA, OPEN_PDF, CREATE_PDF, DELETE_PDF } from \"../constants/actions.js\";\nimport * as api from \"../api/Pdf.js\";\nimport { triggerBase64Download } from 'common-base64-downloader-react';\n\n\nexport const getPdfs = () => async (dispatch) => {\n    try {\n        const { data } = await api.getPdfs();\n        console.log(data)\n        dispatch({ type: FETCH_ALL_PDF, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getPdfData = (pdf) => async (dispatch) => {\n    try {\n        const { data } = await api.getPdfData({id: pdf._id});\n        console.log(data.selectedFile)\n        triggerBase64Download(data.selectedFile, pdf.name)\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const createPdf = (formData) => async (dispatch) => {\n    try {\n        const { data } = await api.createPdf(formData);\n        dispatch({ type: CREATE_PDF, payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const deletePdf = (formData) => async (dispatch) => {\n    try {\n        console.log(formData);\n        const { data } = await api.deletePdf(formData);\n        dispatch({ type: DELETE_PDF, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const openPdf = (pdf) => async (dispatch) => {\n    try{\n        dispatch({ type: OPEN_PDF, payload: pdf });\n    }catch (error){\n        console.log(error);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}