{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/project-semantic/frontend/src/components/Pdfs/Pdf/Pdf.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Paper, IconButton, CardContent, CardMedia, Button, Typography, Grid } from '@mui/material';\nimport { Clear } from '@mui/icons-material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deletePdf, openPdf } from '../../../actions/Pdfs.js';\nimport Draggable, { DraggableCore } from 'react-draggable'; // Both at the same time\n\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { getPdfData } from '../../../actions/Pdfs.js';\nimport PropTypes from 'prop-types';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pdf = _ref => {\n  _s();\n\n  let {\n    pdf\n  } = _ref;\n  const dispatch = useDispatch();\n  const [downloading, setDownloading] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n\n  function handleDelete() {\n    setDeleting(true);\n    dispatch(deletePdf(pdf._id));\n  }\n\n  function handleDownload() {\n    setDownloading(true);\n    dispatch(getPdfData(pdf)).then(() => setDownloading(false));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        sx: {\n          m: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(PictureAsPdfIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          textAlign: \"left\",\n          children: pdf.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"delete\",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            sx: {\n              fontSize: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Download\",\n          onClick: handleDownload,\n          children: /*#__PURE__*/_jsxDEV(DownloadIcon, {\n            sx: {\n              fontSize: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), downloading ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"...Downloading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pdf, \"fALMUtzGssUKuXGQ4zr/5Syj9Tc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Pdf;\nPdf.propTypes = {\n  pdf: PropTypes.Object\n};\nexport default Pdf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pdf\");","map":{"version":3,"sources":["/home/hain/code/project-semantic/frontend/src/components/Pdfs/Pdf/Pdf.jsx"],"names":["React","useState","Paper","IconButton","CardContent","CardMedia","Button","Typography","Grid","Clear","DeleteIcon","Menu","MenuItem","useDispatch","useSelector","deletePdf","openPdf","Draggable","DraggableCore","DownloadIcon","getPdfData","PropTypes","PictureAsPdfIcon","Pdf","pdf","dispatch","downloading","setDownloading","deleting","setDeleting","handleDelete","_id","handleDownload","then","m","name","fontSize","propTypes","Object"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Paper, IconButton, CardContent, CardMedia, Button, Typography, Grid} from '@mui/material';\nimport {Clear} from '@mui/icons-material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deletePdf, openPdf } from '../../../actions/Pdfs.js';\nimport Draggable, {DraggableCore} from 'react-draggable'; // Both at the same time\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { getPdfData } from '../../../actions/Pdfs.js'\nimport PropTypes from 'prop-types';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\n\nconst Pdf = ({pdf}) => {\n    const dispatch = useDispatch();\n    const [downloading, setDownloading] = useState(false);\n    const [deleting, setDeleting] = useState(false);\n    function handleDelete(){\n        setDeleting(true)\n        dispatch(deletePdf(pdf._id));\n    }\n    function handleDownload(){\n        setDownloading(true);\n        dispatch(getPdfData(pdf)).then(\n            () => setDownloading(false)\n        );\n    }\n    return (\n        <>\n            <Paper elevation={3}>\n                <Grid container direction=\"row\" sx={{m: 3}}>\n                    <IconButton disabled>\n                        <PictureAsPdfIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" textAlign=\"left\">{pdf.name}</Typography>\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete}>\n                                <DeleteIcon  sx={{ fontSize: 20 }}/>\n                    </IconButton>\n                    <IconButton edge=\"end\" aria-label=\"Download\" onClick={handleDownload}>\n                    <DownloadIcon  sx={{ fontSize: 20 }}/>\n                </IconButton>\n                {\n                    downloading?(\n                        <Typography>...Downloading</Typography>\n                    ):(\n                        <></>\n                    )\n                }\n                </Grid>\n            </Paper>\n        </>\n    );\n};\nPdf.propTypes = {\n    pdf: PropTypes.Object\n};\nexport default Pdf;\n"]},"metadata":{},"sourceType":"module"}