{"ast":null,"code":"var _jsxFileName = \"/home/hain/code/workspace/frontend/src/components/Notesform/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { createNote } from \"../../actions/Notes.js\";\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(binId) {\n  _s();\n\n  const dispatch = useDispatch();\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n  const [noteData, setNoteData] = useState({\n    note: \"\",\n    bin: binId,\n    due: \"\",\n    file: \"\"\n  });\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleSubmit() {\n    dispatch(createNote({\n      name,\n      workspaceId\n    }));\n    handleClose();\n  }\n\n  function handleDueDateChange(newDate) {\n    setNoteData({ ...notedata,\n      due: newDate\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: handleClickOpen,\n        children: \"Create Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"note\",\n            variant: \"outlined\",\n            label: \"Note\",\n            fullWidth: true,\n            value: noteData.note,\n            onChange: e => setNoteData({ ...noteData,\n              note: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n            label: \"For desktop\",\n            value: noteData.due,\n            onChange: newValue => {\n              handleDueDateChange(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"custom-file-input\",\n            name: \"myImage\",\n            onChange: _ref => {\n              let {\n                file\n              } = _ref;\n              return setNoteData({ ...noteData,\n                selectedFile: file\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"KX093Yv9ACs9oUN0m33vKcw6Qgo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/hain/code/workspace/frontend/src/components/Notesform/Form.jsx"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useDispatch","createNote","DesktopDatePicker","LocalizationProvider","AdapterDateFns","DateTimePicker","DateAdapter","Form","binId","dispatch","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","noteData","setNoteData","note","bin","due","file","open","setOpen","handleClickOpen","handleClose","handleSubmit","name","workspaceId","handleDueDateChange","newDate","notedata","e","target","value","newValue","params","selectedFile"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle} from \"@mui/material\"\nimport {useDispatch} from \"react-redux\"\nimport {createNote} from \"../../actions/Notes.js\"\nimport {DesktopDatePicker} from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\n\nexport default function Form( binId) {\n    const dispatch = useDispatch()\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {PaperProps: {\n        style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n    const [noteData, setNoteData] = useState({ note: \"\", bin: binId, due: \"\", file: \"\" });\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => { \n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleSubmit (){\n        dispatch(createNote({name, workspaceId}))\n        handleClose();\n    }\n\n    function handleDueDateChange(newDate){\n        setNoteData({...notedata, due: newDate});\n    }\n\n    return (\n\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <div>\n                <Button  color=\"secondary\" variant=\"contained\" onClick={handleClickOpen}>\n                    Create Note\n                </Button>\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle>Create Note</DialogTitle>\n                    <DialogContent>\n                        <TextField name=\"note\" variant=\"outlined\" label=\"Note\" fullWidth value={noteData.note} onChange={(e) => setNoteData({ ...noteData, note: e.target.value })} />\n                        <DesktopDatePicker\n                            label=\"For desktop\"\n                            value={noteData.due}\n                            onChange={(newValue) => {\n                                handleDueDateChange(newValue);\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                        <input type=\"file\" className=\"custom-file-input\" name=\"myImage\" onChange= {({file}) => setNoteData({...noteData, selectedFile: file})} />\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>Cancel</Button>\n                        <Button onClick={handleSubmit}>Submit</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        </LocalizationProvider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}