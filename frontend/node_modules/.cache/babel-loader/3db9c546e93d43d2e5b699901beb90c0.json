{"ast":null,"code":"import { FETCH_ALL_BIN, CREATE_BIN, UPDATE_BIN, DELETE_BIN, OPEN_WORKSPACE, FETCH_ALL_WORKSPACE, CREATE_WORKSPACE, UPDATE_WORKSPACE, DELETE_WORKSPACE } from \"../constants/actions.js\";\n\nconst WorkspaceReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    workspaces: [],\n    openWorkspace: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL_WORKSPACE:\n      return { ...state,\n        workspaces: action.payload\n      };\n\n    case OPEN_WORKSPACE:\n      return { ...state,\n        openWorkspace: action.payload\n      };\n\n    case CREATE_WORKSPACE:\n      return { ...state,\n        workspaces: [...state.workspaces, action.payload]\n      };\n\n    case UPDATE_WORKSPACE:\n      return { ...state,\n        workspaces: state.workspaces.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE_WORKSPACE:\n      return { ...state,\n        workspaces: state.workspaces.filter(post => post._id !== action.payload)\n      };\n\n    case FETCH_ALL_BIN:\n      return { ...state,\n        bins: action.payload\n      };\n\n    case CREATE_BIN:\n      return { ...state,\n        workspaces: state.workspaces.map(workspace => {\n          if (workspace._id === action.payload.workspaceId) {\n            workspace.bins.push(action.payload._id);\n          }\n\n          return workspace;\n        }),\n        bins: [...state.bins, action.payload]\n      };\n\n    case UPDATE_BIN:\n      return { ...state,\n        bins: state.bins.map(bin => bin._id === action.payload._id ? action.payload : bin)\n      };\n\n    case DELETE_BIN:\n      return { ...state,\n        workspaces: state.workspaces.map(workspace => {\n          if (workspace._id === action.payload.workspace._id) {\n            console.log(\"inside if\");\n            return action.payload.workspace;\n          }\n\n          return workspace;\n        }),\n        openWorkspace: action.payload.workspace,\n        bins: state.bins.filter(bin => bin._id !== action.payload.bin._id)\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = WorkspaceReducer;\nexport default WorkspaceReducers;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkspaceReducer\");","map":{"version":3,"sources":["/home/hain/code/workspace/frontend/src/reducers/workspaces.js"],"names":["FETCH_ALL_BIN","CREATE_BIN","UPDATE_BIN","DELETE_BIN","OPEN_WORKSPACE","FETCH_ALL_WORKSPACE","CREATE_WORKSPACE","UPDATE_WORKSPACE","DELETE_WORKSPACE","WorkspaceReducer","state","workspaces","openWorkspace","action","type","payload","map","post","_id","filter","bins","workspace","workspaceId","push","bin","console","log","WorkspaceReducers"],"mappings":"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","sourcesContent":["import {  FETCH_ALL_BIN, CREATE_BIN, UPDATE_BIN, DELETE_BIN, OPEN_WORKSPACE, FETCH_ALL_WORKSPACE, CREATE_WORKSPACE, UPDATE_WORKSPACE, DELETE_WORKSPACE} from \"../constants/actions.js\";\n\nconst WorkspaceReducer = (state = {workspaces: [], openWorkspace: null},action) => {\n    switch (action.type) {\n    case FETCH_ALL_WORKSPACE:\n        return {...state, workspaces: action.payload};\n    case OPEN_WORKSPACE:\n        return {...state, openWorkspace: action.payload};\n    case CREATE_WORKSPACE:\n        return {...state, workspaces: [...state.workspaces, action.payload]};\n    case UPDATE_WORKSPACE:\n        return {...state, workspaces: state.workspaces.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case DELETE_WORKSPACE:\n        return {...state, workspaces: state.workspaces.filter((post) => post._id !== action.payload)};\n    case FETCH_ALL_BIN:\n        return {...state, bins: action.payload};\n    case CREATE_BIN:\n        return {...state, workspaces: state.workspaces.map(workspace => {\n            if(workspace._id === action.payload.workspaceId){workspace.bins.push(action.payload._id);}\n            return workspace;\n        }), bins: [...state.bins, action.payload]};\n    case UPDATE_BIN:\n        return {...state, bins: state.bins.map(bin => bin._id === action.payload._id? action.payload : bin)};\n    case DELETE_BIN:\n        return {...state, workspaces: state.workspaces.map((workspace) => {\n            if(workspace._id === action.payload.workspace._id){\n                console.log(\"inside if\");\n                return action.payload.workspace;\n            }\n            return workspace;\n        }), openWorkspace: action.payload.workspace, bins: state.bins.filter(bin => bin._id !== action.payload.bin._id)};\n    default:\n        return state;\n    }\n};\n\nexport default WorkspaceReducers;\n"]},"metadata":{},"sourceType":"module"}